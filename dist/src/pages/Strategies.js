import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Plus, Edit2, Trash2 } from 'lucide-react';
import { useLanguage } from '../lib/i18n/LanguageContext';
import { Button } from '../components/ui';
export function Strategies() {
    const { t } = useLanguage();
    const [strategies, setStrategies] = useState([]);
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [currentStrategy, setCurrentStrategy] = useState(null);
    const handleCreateStrategy = () => {
        setCurrentStrategy(null);
        setIsModalOpen(true);
    };
    const handleEditStrategy = (strategy) => {
        setCurrentStrategy(strategy);
        setIsModalOpen(true);
    };
    const handleDeleteStrategy = (strategyId) => {
        if (confirm(t.strategies.confirmDelete)) {
            setStrategies(strategies.filter(strategy => strategy.id !== strategyId));
        }
    };
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("h1", { className: "text-2xl font-semibold text-gray-900 dark:text-white", children: t.strategies.title }), _jsxs(Button, { onClick: () => setIsModalOpen(true), className: "flex items-center bg-indigo-600 hover:bg-indigo-700 text-white dark:bg-indigo-500 dark:hover:bg-indigo-600", children: [_jsx(Plus, { className: "w-5 h-5 mr-2" }), t.strategies.newStrategy] })] }), _jsx("div", { className: "bg-white dark:bg-[#020817] shadow rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700", children: _jsxs("table", { className: "min-w-full divide-y divide-gray-200 dark:divide-gray-700", children: [_jsx("thead", { className: "bg-gray-50 dark:bg-[#020817]/50", children: _jsxs("tr", { children: [_jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-700 dark:text-white uppercase tracking-wider", children: t.common.name }), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-700 dark:text-white uppercase tracking-wider", children: t.common.description }), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-700 dark:text-white uppercase tracking-wider", children: t.common.parameters }), _jsx("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-700 dark:text-white uppercase tracking-wider", children: t.common.actions })] }) }), _jsxs("tbody", { className: "bg-white dark:bg-[#020817] divide-y divide-gray-200 dark:divide-gray-700", children: [strategies.map((strategy) => (_jsxs("tr", { className: "hover:bg-gray-50 dark:hover:bg-[#020817]/50", children: [_jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsx("div", { className: "text-sm font-medium text-gray-900 dark:text-white", children: strategy.name }) }), _jsx("td", { className: "px-6 py-4", children: _jsx("div", { className: "text-sm text-gray-600 dark:text-gray-300", children: strategy.description }) }), _jsx("td", { className: "px-6 py-4", children: _jsxs("div", { className: "text-sm text-gray-600 dark:text-gray-300", children: [_jsxs("div", { children: [t.strategies.entry, ": ", strategy.parameters.entryType] }), _jsxs("div", { children: [t.strategies.stopLoss, ": ", strategy.parameters.stopLoss, "%"] }), _jsxs("div", { children: [t.strategies.takeProfit, ": ", strategy.parameters.takeProfit, "%"] }), _jsxs("div", { children: [t.strategies.leverage, ": ", strategy.parameters.leverage, "x"] })] }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm font-medium", children: _jsxs("div", { className: "flex space-x-3", children: [_jsx("button", { onClick: () => handleEditStrategy(strategy), className: "text-indigo-600 hover:text-indigo-700 dark:text-indigo-400 dark:hover:text-indigo-300", children: _jsx(Edit2, { className: "w-5 h-5" }) }), _jsx("button", { onClick: () => handleDeleteStrategy(strategy.id), className: "text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300", children: _jsx(Trash2, { className: "w-5 h-5" }) })] }) })] }, strategy.id))), strategies.length === 0 && (_jsx("tr", { children: _jsx("td", { colSpan: 4, className: "px-6 py-4 text-center text-sm text-gray-600 dark:text-gray-300", children: t.strategies.noStrategies }) }))] })] }) }), isModalOpen && (_jsx("div", { className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center", children: _jsxs("div", { className: "bg-white dark:bg-[#020817] rounded-lg p-6 w-full max-w-lg border border-gray-200 dark:border-gray-700", children: [_jsx("h3", { className: "text-lg font-medium text-gray-900 dark:text-white mb-4", children: currentStrategy ? t.strategies.editStrategy : t.strategies.createStrategy }), _jsxs("form", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 dark:text-white", children: t.common.name }), _jsx("input", { type: "text", className: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-700 bg-white dark:bg-[#020817] text-gray-900 dark:text-white shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400", placeholder: t.strategies.namePlaceholder })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 dark:text-white", children: t.common.description }), _jsx("textarea", { className: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-700 bg-white dark:bg-[#020817] text-gray-900 dark:text-white shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400", rows: 3, placeholder: t.strategies.descriptionPlaceholder })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 dark:text-white", children: t.strategies.entryType }), _jsxs("select", { className: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-700 bg-white dark:bg-[#020817] text-gray-900 dark:text-white shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400", children: [_jsx("option", { value: "market", children: t.strategies.market }), _jsx("option", { value: "limit", children: t.strategies.limit })] })] }), _jsxs("div", { children: [_jsxs("label", { className: "block text-sm font-medium text-gray-700 dark:text-white", children: [t.strategies.stopLoss, " (%)"] }), _jsx("input", { type: "number", step: "0.1", className: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-700 bg-white dark:bg-[#020817] text-gray-900 dark:text-white shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400" })] }), _jsxs("div", { children: [_jsxs("label", { className: "block text-sm font-medium text-gray-700 dark:text-white", children: [t.strategies.takeProfit, " (%)"] }), _jsx("input", { type: "number", step: "0.1", className: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-700 bg-white dark:bg-[#020817] text-gray-900 dark:text-white shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 dark:text-white", children: t.strategies.leverage }), _jsx("input", { type: "number", min: "1", max: "100", className: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-700 bg-white dark:bg-[#020817] text-gray-900 dark:text-white shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400" })] }), _jsxs("div", { className: "flex justify-end space-x-3 mt-6", children: [_jsx("button", { type: "button", onClick: () => setIsModalOpen(false), className: "px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-[#020817]/50", children: t.common.cancel }), _jsx("button", { type: "submit", className: "px-4 py-2 bg-indigo-600 hover:bg-indigo-700 dark:bg-indigo-500 dark:hover:bg-indigo-600 text-white rounded-md", children: currentStrategy ? t.common.save : t.common.create })] })] })] }) }))] }));
}
